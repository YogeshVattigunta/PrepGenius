# -*- coding: utf-8 -*-
"""Q&A.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Bw0pbA05RXVffAZkTp_SwJfvCVdvYL-m
"""

!pip install -q PyPDF2

import google.generativeai as genai
import PyPDF2
genai.configure(api_key="AIzaSyCNd7y_kcAjV9z817CXc9mJSAAehPHJqzM")


question_generator = """
    Your a question generating assistant.

    Steps:
    1. You analyze all the uploaded files
    2. You understand the materials
    3. After that you have to build 2 MCQ questions based on the provided materials.
    4. Then, build 2 subjective questions based on the provided materials.
    5. After that you will shuffle the MCQ and subjective questions, add the question number (e.g: Question 1:...., Question 2:...) and display it.
    6. You will then add a unique seprator <q> to sperate each question

    Note: only the questions are required, no need of any other text.
    Note: No need to add markdown element
    Note: Total No question should be 4


"""

def extract_text_from_pdf(pdf_path):
    with open(pdf_path, 'rb') as pdf_file:
        pdf_reader = PyPDF2.PdfReader(pdf_file)
        extracted_text = ""
        for page in pdf_reader.pages:
            text = page.extract_text()
            if text:
                extracted_text += text
        return extracted_text


module_1 = genai.upload_file('/content/Module 1_PPT.pdf')


model = genai.GenerativeModel("gemini-1.5-pro")
questions = model.generate_content([question_generator, module_1]).text

# Initialize questions and answers
questions = response.split("<q>")
answers = []

for question in questions:
    print(question)
    answer = input("Answer: ")
    answers.append((f"Question : {question.strip()}", f"Answer : {answer.strip()}"))

# Create a .txt file with the Q&A format
filename = "answersheet.txt"
with open(filename, "w") as file:
    for question, answer in answers:
        file.write(f"{question}\n{answer}\n\n")

print(f"All questions and answers have been saved in '{filename}'!")



evaluator = """
    Your are an evaluation assistant where:

    1. You get the answer sheet provided by the user.
    2. You check Answers corresponding to the question.
    3. Then, evaluate the answers with questions.
    4. And add evaluation as : correct, worng
    5. The evaluation will be displayed as, evaluation: correct
    6. The convert the evaluation score into percentage and display it at the end as "Total score : 50%"
    7. The you will add a unique seprator <evl> between the last question and Total score

    example:
        Question 1: What is the capital of France?
        Answer 1: Paris
        Evaluation 1: correct
        Question 2: What is the largest planet in our solar system?
        Answer 2: Sun
        Evaluation 2: wrong


"""

def extract_text_from_txt(txt_path):
    with open(txt_path, 'r', encoding='utf-8') as txt_file:
        extracted_text = txt_file.read()
    return extracted_text

answer_sheet = genai.upload_file('/content/answersheet.txt')



model = genai.GenerativeModel("gemini-1.5-pro")
evaluation = model.generate_content([evaluator, answer_sheet]).text

# Initialize questions and answers
questions = response.split("<q>")
answers = []

for question in questions:
    print(question)
    answer = input("Answer: ")
    answers.append((f"Question : {question.strip()}", f"Answer : {answer.strip()}"))

# Create a .txt file with the Q&A format
filename = "answersheet.txt"
with open(filename, "w") as file:
    for question, answer in answers:
        file.write(f"{question}\n{answer}\n\n")

print(f"All questions and answers have been saved in '{filename}'!")



print(evaluation)

final_score = evaluation.split("<evl>")[-1]
print(final_score)